Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.

 

Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".

Example 2:

Input: s = "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".

___________________Solution_______________________
class Solution {
public:
     int ans = 0;
    void expand(string &s , int left ,int right)
    {
    
        while(left >= 0 &&  right < s.size() && s[left] == s[right])
            {
                left--,right++; ans++;
            }
        
    }
    int countSubstrings(string s) {
        if(s.size()==0 || s=="")
          return 0;
        for(int i = 0 ; i < s.size() ; i++)
        {
            expand(s , i , i);
            expand(s , i , i+1);
        }
        return ans;
    }
};
