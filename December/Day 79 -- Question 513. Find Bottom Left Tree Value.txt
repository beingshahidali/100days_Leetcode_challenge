Given the root of a binary tree, return the leftmost value in the last row of the tree.

 

Example 1:

Input: root = [2,1,3]
Output: 1

Example 2:

Input: root = [1,2,3,4,null,5,6,null,null,7]
Output: 7

____________________________Solution______________________________
class Solution {
public:
    
    int findBottomLeftValue(TreeNode* root) {
        queue<pair<TreeNode*,int>> q;
        int ans = 0;
        int currLevel = 0;
        q.push({root,1});
        while(q.size()){
            int n = q.size();
            for(int i =0;i<n;i++){
                auto it = q.front(); q.pop();
                TreeNode* node = it.first;
                 int level = it.second;
                if(i==0 && level>currLevel){
                    currLevel= level; 
                    ans = node->val;
                }
                if(node->left)q.push({node->left,level+1});
                if(node->right)q.push({node->right,level+1});
            }
            
        }
        return ans;

    }
};