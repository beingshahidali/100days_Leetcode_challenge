Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

 

Example 1:

Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]

Example 2:

Input: root = [1,null,3]
Output: [1,3]

Example 3:

Input: root = []
Output: []

_________________________Solution______________________________
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        if(!root) return ans;
        queue<TreeNode *> q;
        q.push(root);
        while(q.size()){
            
            int n = q.size();
            for(int i =0;i<n;i++){
                TreeNode *front = q.front(); q.pop();
                if(i==n-1)ans.push_back(front->val);
                if(front->left)q.push(front->left);
                if(front->right)q.push(front->right);
            }
        }
        return ans;
    }
};