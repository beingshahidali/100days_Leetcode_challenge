Given the root of a binary tree, return the sum of all left leaves.

A leaf is a node with no children. A left leaf is a leaf that is the left child of another node.

 

Example 1:

Input: root = [3,9,20,null,null,15,7]
Output: 24
Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.

Example 2:

Input: root = [1]
Output: 0

___________________________Solution_______________________________
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if (!root) return 0;
        int sum = 0;
        helper(root, sum);
        return sum;
    }

private:
    void helper(TreeNode* node, int& sum) {
        if (!node) return;
        
        if (node->left && !node->left->left && !node->left->right) {
            // If the left child is a leaf, add its value to the sum
            sum += node->left->val;
        }

        // Recursively process left and right subtrees
        helper(node->left, sum);
        helper(node->right, sum);
    }
};